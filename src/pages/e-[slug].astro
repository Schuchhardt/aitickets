---
import _ from "lodash";
import { supabase } from "../lib/supabaseClient";
import AppHeader from "../components/AppHeader.vue";
import AppFooter from "../components/AppFooter.vue";
import EventDetail from "../components/EventDetail.vue";
import Layout from '../layouts/Layout.astro';
import "../styles/global.css";

export const prerender = false;

const { slug } = Astro.params;

// Obtener el evento
const { data: event, error } = await supabase
  .from("events")
  .select("*")
  .eq("slug", slug)
  .single();

if (!error || event) {
  // Obtener las categorías del evento
  const { data: categories, error: errorCategories } = await supabase
    .from("event_tags")
    .select("category_tags(name)") 
    .eq("event_id", event.id);

  //load categories
  if (errorCategories) {
    console.error("Error al obtener las categorías:", errorCategories);
  } else {
    // @ts-ignore
    event.tags = categories.map(c => c.category_tags).map(ct => ct.name);
  }

  //load tickets // TODO VALIDAR STOCK DE VENDIDAS QUE SEA MENOR A MAX_QTY
  const { data: event_tickets, error: errorTickets } = await supabase
  .from("event_tickets")
  .select("*")
  .eq("event_id", event.id) // Solo entradas del evento actual
  .eq("is_gift", false) // Excluir las entradas de cortesía
  .order("price", { ascending: true }); // Ordenar por precio

  if (errorTickets){
    console.error("Error al obtener las entradas:", errorTickets);
    event.tickets = []
  } else {
    console.log(event_tickets)
    event.tickets = event_tickets
  }
  
} else {
  console.error("Error al obtener el evento:", error);
  // redirect to 404
  Astro.redirect('/404');
}


---

<Layout>
    <AppHeader/>
    <EventDetail event={event} client:idle/>
    <AppFooter/>
</Layout>
