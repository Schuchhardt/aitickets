service: aitickets-functions

frameworkVersion: '4'  # Actualizado a la versi√≥n 4

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  deploymentBucket:
    name: serverless-deployment-bucket-aitickets
  environment:
    OPENAI_API_KEY: ${env:OPENAI_API_KEY}
    SUPABASE_URL: ${env:SUPABASE_URL}
    SUPABASE_ANON_KEY: ${env:SUPABASE_ANON_KEY}
    API_SECRET: ${env:PUBLIC_API_SECRET}
  httpApi:
    disableDefaultEndpoint: true
    cors:
      allowedOrigins:
        - http://localhost:4321
        - http://localhost:8000
        - https://aitickets.cl
      allowedHeaders:
        - Content-Type
        - Authorization
        - X-Amz-Date
        - X-Api-Secret
      allowedMethods:
        - OPTIONS
        - GET
        - POST
        - PUT
        - DELETE

functions:
  aiAssistant:
    handler: functions/aiAssistant.handler
    timeout: 28
    events:
      - httpApi:
          path: /api/ai-assistant
          method: POST

  # addUserToNewsletter:
  #   handler: functions/addUserToNewsletter.handler
  #   events:
  #     - httpApi:
  #         path: /api/newsletter
  #         method: POST

  # purchaseTickets:
  #   handler: functions/purchaseTickets.handler
  #   events:
  #     - httpApi:
  #         path: /api/purchase
  #         method: POST

plugins:
  - serverless-offline

build:
  esbuild:
    # Enable or Disable bundling the function code and dependencies into a single file. (Default: true)
    bundle: true
    # NPM packages to not be bundled, and instead be available in node_modules, and the zip file uploaded to Lambda.
    #
    # This property only makes sense if bundling is enabled.
    #
    # If no excludes (see below) are specified, and the runtime is set to nodejs16.x or lower,
    # we automatically add "aws-sdk" to the list of externals.
    #
    # If no excludes (see below) are specified, and the runtime is set to nodejs18.x or higher,
    # we automatically add "aws-sdk/*" to the list of externals.
    #
    # Glob patterns are supported here.
    external:
      - '@aws-sdk/client-s3'
    # The packages config, this can be set to override the behavior of external
    # If this is set then all dependencies will be treated as external and not bundled.
    packages: external
    # NPM packages to not be included in node_modules, and the zip file uploaded to Lambda.
    #
    # This option only makes most sense if bundling is disabled. But if bundling is enabled and externals are specified
    # this property can be useful to further control which external packages to be included/excluded from the zip file.
    #
    # Everything specified here is also added to the list of externals (see above).
    #
    # Glob patterns are supported here.
    exclude:
      # Exclude all aws-sdk packages. This is done for you by default.
      - '@aws-sdk/*'
      # However, if you want to INCLUDE specific aws-sdk packages, you can use the negation operator (!)
      # This is useful if the Lambda built-in aws-sdk is outdated and you need to use a newer version.
      # Just make sure you specify the exact version of the aws-sdk in package.json.
      - '!@aws-sdk/client-bedrock-runtime'
    # By default Framework will attempt to build and package all functions concurrently.
    # This property can bet set to a different number if you wish to limit the
    # concurrency of those operations.
    buildConcurrency: 3
    # Enable or Disable minifying the built code. (Default: false)
    minify: true
    # Enable or configure sourcemaps, can be set to true or to an object with further configuration.
    sourcemap:
      # The sourcemap type to use, options are (inline, linked, or external)
      type: linked
      # Whether to set the NODE_OPTIONS on functions to enable sourcemaps on Lambda
      setNodeOptions: true
